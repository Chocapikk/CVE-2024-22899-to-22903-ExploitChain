<?php

class SystemHandler extends OPHandler{
    // TRUNCATED FOR CLARITY

    /**
     * 设置网卡信息
     * @param unknown $params
     */
    public function setNetworkCardInfo($params){
        $name = $params['NAME'];
        $ipaddr = $params['IPADDR'];
        $netmask = $params['NETMASK'];
        $gateway = $params['GATEWAY'];
        $dns = $params['DNS'];
        //检测参数是否为空
        $this->paramsCheck($name);
        
        $params['TYPE'] = "Ethernet";             //网卡类型
        $params['BOOTPROTO'] = "static";//配置静态获取IP
        $params['ONBOOT'] = "yes";      //开机启动
		$params['DEVICE'] = $name;        $operate = Xphp::$_lang['WEB_SYSTEM_SETTING_NETWORK'] . "[" . $name . "]" . Xphp::$_lang['WEB_SYSTEM_SETTING_IP'];
        //检测系统任务状态
        $this->checkTaskStatus($operate);
        
        //配置文件内容
        $configFileContent = '';
        $networkCardPath = Xphp::$_config['NETWORKCARD']['path'] . Xphp::$_config['NETWORKCARD']['prefix'] . $name;
        if(file_exists($networkCardPath)){
            //如果网卡配置文件存在,修改配置文件
            $cmd = "cat " . $networkCardPath;
            exec($cmd, $info);
            //需要查找的关键字,带这些关键字的需要替换,其他的照抄
            $keyArr = array("NAME", "DEVICE", "IPADDR", "NETMASK", "GATEWAY", "TYPE", "BOOTPROTO", "ONBOOT");
            foreach ($keyArr as $each){
                $flag = true;
                foreach ($info as $key){
                    if(stristr($key, $each)){
                        //如果匹配到了关键字
                        $configFileContent .= $each . "=" . $params[$each] . PHP_EOL;
                        $flag = false;
                        break;
                    }
                }
                if ($flag){
                    //添加关键字外除了DNS的选项
                    if(!empty($each) && "DNS" != substr($each, 0, 3)){
                        $configFileContent .=  $each . "=" . $params[$each] . PHP_EOL;
                    }
                }
            }
        }else{
        	
            //如果网卡配置文件不存在,按模板写入一个配置文件
            $keyArr = array("NAME", "DEVICE", "IPADDR", "NETMASK", "GATEWAY", "TYPE", "BOOTPROTO", "ONBOOT");
            foreach ($keyArr as $key){
                $configFileContent .= $key . "=" . $params[$key] . PHP_EOL;
            }
        }
        
        //最后处理DNS,添加用户配置的DNS到配置文件
        if(!empty($dns)){
            //按逗号分隔,处理一下半角和全角标点
            $comma = ",";
            if(stristr($dns, "，")){
                $comma = "，";
            }
            $dnsArr = explode($comma, $dns);
            $i = 1;
            foreach ($dnsArr as $each){
                $configFileContent .= "DNS" . $i++ . "=" . $each . PHP_EOL;
            }
        }
        //写入配置文件
        $cmd = "echo '" . $configFileContent . "'>" . $networkCardPath;
        $opName = 'PT_SYSTEM_BACKGROUND_OP_DO_COMMAND';
        $msg = array('command'=>$cmd);
        $mbResult = $this->mbPFMsg($opName, json_encode($msg), true);
        
        $this->unifyWriteSystemLog($mbResult['result'], 'SYSTEM_SETTING_IP');
        
        if($mbResult['result']){
            $cmd = "/usr/sbin/service network restart;";
            $opName = 'PT_SYSTEM_BACKGROUND_OP_DO_COMMAND';
            $msg = array('command'=>$cmd);
            $mbResult = $this->mbPFMsg($opName, json_encode($msg), true);
            if($mbResult['result']){
                //这里因为要重启后台所有服务，无法获取最终执行命令结果。所以不判断了
                $this->restartService();
            }
        }
        
        return $this->muOpResult($mbResult['result'], $operate);
    }
}

?>